@spacings: {
    4: 0.25rem;
    8: 0.5rem;
    16: 1rem;
    28: 1.75rem;
    32: 2rem;
    40: 2.5rem;
    48: 3rem;
    64: 4rem;
    none: 0;
};

@breakpointMin: {
    xs: 25rem;
    smlr: 45rem;
    sm: 60rem;
    md: 75rem;
};

.IDS_UTIL_GenerateBreakpointMarginForSideAndSpacing(@break, @side, @spacingName, @spacingSize) {
    .if.u-margin-@{break}-@{side}--@{spacingName} {
        margin-@{side}: @spacingSize;
    }
}

.IDS_UTIL_GenerateBreakpointPaddingForSideAndSpacing(@break, @side, @spacingName, @spacingSize) {
    .if.u-padding-@{break}-@{side}--@{spacingName} {
        padding-@{side}: @spacingSize;
    }
}

.IDS_UTIL_GenerateBreakpointMarginsForSpacing(@spacingName, @spacingSize) {
    each(@breakpointMin, {
        @media screen and (min-width: @value) {
            .IDS_UTIL_GenerateBreakpointMarginForSideAndSpacing(@key, top, @spacingName, @spacingSize);
            .IDS_UTIL_GenerateBreakpointMarginForSideAndSpacing(@key, right, @spacingName, @spacingSize);
            .IDS_UTIL_GenerateBreakpointMarginForSideAndSpacing(@key, bottom, @spacingName, @spacingSize);
            .IDS_UTIL_GenerateBreakpointMarginForSideAndSpacing(@key, left, @spacingName, @spacingSize);
        }
    });
}

.IDS_UTIL_GenerateBreakpointPaddingsForSpacing(@spacingName, @spacingSize) {
    each(@breakpointMin, {
        @media screen and (min-width: @value) {
            .IDS_UTIL_GenerateBreakpointPaddingForSideAndSpacing(@key, top, @spacingName, @spacingSize);
            .IDS_UTIL_GenerateBreakpointPaddingForSideAndSpacing(@key, right, @spacingName, @spacingSize);
            .IDS_UTIL_GenerateBreakpointPaddingForSideAndSpacing(@key, bottom, @spacingName, @spacingSize);
            .IDS_UTIL_GenerateBreakpointPaddingForSideAndSpacing(@key, left, @spacingName, @spacingSize);
        }
    });
}

.IDS_UTIL_GenerateBreakpointMargins() {
    each(@spacings, {
        .IDS_UTIL_GenerateBreakpointMarginsForSpacing(@key, @value);
    });
}

.IDS_UTIL_GenerateBreakpointPaddings() {
    each(@spacings, {
        .IDS_UTIL_GenerateBreakpointPaddingsForSpacing(@key, @value);
    });
}

.IDS_UTIL_Padding_Horizontal() {
    padding-left: var(--ids-size-spacing-24);
    padding-right: var(--ids-size-spacing-24);
    .IDS_BREAKPOINT_MQ_ExtraSmall_Min({
        padding-left: var(--ids-size-spacing-32);
        padding-right: var(--ids-size-spacing-32);
    });
    .IDS_BREAKPOINT_MQ_Smaller_Min({
        padding-left: var(--ids-size-spacing-40);
        padding-right: var(--ids-size-spacing-40);
    });
}

.IDS_UTIL_Margin_Horizontal_Negative() {
    margin-left: calc(var(--ids-size-spacing-24) * -1);
    margin-right: calc(var(--ids-size-spacing-24) * -1);
    .IDS_BREAKPOINT_MQ_ExtraSmall_Min({
        margin-left: calc(var(--ids-size-spacing-32) * -1);
        margin-right: calc(var(--ids-size-spacing-32) * -1);
    });
    .IDS_BREAKPOINT_MQ_Smaller_Min({
        margin-left: calc(var(--ids-size-spacing-40) * -1);
        margin-right: calc(var(--ids-size-spacing-40) * -1);
    });
}

.IDS_UTIL_Padding_Horizontal_Wide() {
    .IDS_BREAKPOINT_MQ_Xxl_Min({
        padding-left: var(--ids-size-spacing-56);
        padding-right: var(--ids-size-spacing-56);
    });
}
