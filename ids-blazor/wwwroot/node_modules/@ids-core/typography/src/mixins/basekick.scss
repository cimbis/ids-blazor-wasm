@use 'sass:math';
@import '@ids-core/utils/src/mixins/utils.scss';

@function getHeightCorrection($lineHeight, $capHeight, $fontSize, $span) {
    $topSpace: $lineHeight - $capHeight * $fontSize;
    @if ($topSpace > $span) {
        $returnValue: $topSpace - ($topSpace % $span);
        @return $returnValue;
    } @else {
        @return 0;
    }
}

@function strip-unit($number) {
    @if type-of($number) == 'number' and not unitless($number) {
        @return math.div($number, $number * 0 + 1);
    }

    @return $number;
}

@function calculate-type-offset($lineHeight, $fontSize, $descenderHeight) {
    $lineHeight: strip-unit($lineHeight);
    $fontSize: strip-unit($fontSize);
    $scale: math.div($lineHeight, $fontSize);
    $offset: (($scale - 1) * 0.5) + $descenderHeight;
    @return decimal-round($offset, 5);
}

@mixin IDS_TYPOGRAPHY_Basekick(
    $bk-font-size-in-px,
    $bk-descender-height-scale,
    $bk-type-row-span,
    $bk-grid-row-height,
    $bk-line-height: false,
    $bk-prevent-collapse: false,
    $bk-cap-height: 0
) {
    font-size: $bk-font-size-in-px;

    @if ($bk-line-height) {
        $offset: calculate-type-offset(
            $bk-line-height,
            $bk-font-size-in-px,
            $bk-descender-height-scale
        );
        line-height: strip-unit($bk-line-height) * 1px;
        transform: translateY(#{$offset}em);

        @if ($bk-prevent-collapse) {
            $height-correction: getHeightCorrection(
                $bk-line-height,
                $bk-cap-height,
                $bk-font-size-in-px,
                $bk-type-row-span
            );
            padding-top: $bk-prevent-collapse * 1px;
            &::before {
                content: '';
                margin-top: -($height-correction + $bk-prevent-collapse);
                display: block;
                height: 0;
            }
        }
    } @else {
        $bk-line-height: ($bk-type-row-span * $bk-grid-row-height);
        $offset: calculate-type-offset(
            $bk-line-height,
            $bk-font-size-in-px,
            $bk-descender-height-scale
        );
        line-height: strip-unit($bk-line-height) * 1px;
        transform: translateY(#{$offset}em);
    }
}
