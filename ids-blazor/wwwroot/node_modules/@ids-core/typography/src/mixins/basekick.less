.getHeightCorrection(@lineHeight, @capHeight, @fontSize, @span) {
    @topSpace: @lineHeight - (@capHeight * @fontSize);
    @result: if((@topSpace > @span), (@topSpace - mod(@topSpace, @span)), 0);
}

.IDS_TYPOGRAPHY_Basekick(@bk-font-size-in-px, @bk-descender-height-scale, @bk-type-row-span, @bk-grid-row-height, @bk-line-height: false, @bk-prevent-collapse: false, @bk-cap-height: 0,) {
    font-size: @bk-font-size-in-px;

    .calculate-type-offset(@line-height) {
        @size-line-heightscale: (@line-height / @bk-font-size-in-px);
        @offset: ((@size-line-heightscale - 1) / 2) + @bk-descender-height-scale;
        transform: translateY(unit(round(@offset, 5), em));
    }

    & when not (isNumber(@bk-line-height)) {
        @bk-line-height: (@bk-type-row-span * @bk-grid-row-height);
        line-height: unit(@bk-line-height, px);
        .calculate-type-offset(@bk-line-height);
    }

    & when (isNumber(@bk-line-height)) {
        line-height: unit(@bk-line-height, px);
        .calculate-type-offset(@bk-line-height);
    }

    & when (isNumber(@bk-line-height)) and (isNumber(@bk-prevent-collapse)) {
        @height-correction: .getHeightCorrection(
                @bk-line-height,
                @bk-cap-height,
                @bk-font-size-in-px,
                @bk-type-row-span
            )
            [ @result];
        padding-top: @bk-prevent-collapse * 1px;

        &::before {
            content: '';
            margin-top: -(@height-correction + @bk-prevent-collapse);
            display: block;
            height: 0;
        }
    }
}
