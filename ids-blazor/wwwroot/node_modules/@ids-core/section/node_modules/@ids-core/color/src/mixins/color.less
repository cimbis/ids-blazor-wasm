.ch-color-luminance-raw(@rgb) {
  @result: if((@rgb < 0.03928), @rgb / 12.92, pow((@rgb + 0.055) / 1.055, 2.4, 16));
}

.ch-color-luminance(@color) {
  @red: red(@color) / 255;
  @green: green(@color) / 255;
  @blue: blue(@color) / 255;

  @rgba-lum-raw-red: .ch-color-luminance-raw(@red) [ @result];
  @rgba-lum-raw-green: .ch-color-luminance-raw(@green) [ @result];
  @rgba-lum-raw-blue: .ch-color-luminance-raw(@blue) [ @result];

  @result: 0.2126 * @rgba-lum-raw-red + 0.7152 * @rgba-lum-raw-green + 0.0722 * @rgba-lum-raw-blue;
}

.ch-color-contrast(@color1, @color2) {
  // Adapted from: https://github.com/LeaVerou/contrast-ratio/blob/gh-pages/color.js
  // Formula: http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef
  @luminance1: .ch-color-luminance(@color1) [ @result] + 0.05;
  @luminance2: .ch-color-luminance(@color2) [ @result] + 0.05;
  @ratio1: @luminance1 / @luminance2;
  @ratio: if((@luminance2 > @luminance1), 1 / @ratio1, @ratio1);

  @result: round(@ratio * 10) / 10;
}

.IDS_COLOR_GetCorrectContrastColor(@backgroundColor, @ratio: 5) {
  @contrast1: .ch-color-contrast(@backgroundColor, @color-text-lightest-beige) [ @result];
  @contrast2: .ch-color-contrast(@backgroundColor, @color-text-brown) [ @result];

  .contrastColor() when (@contrast1 > 5) {
    color: @color-text-lightest-beige;
  }

  .contrastColor() when (@contrast2 > 5) {
    color: @color-text-brown;
  }

  .contrastColor() when (default()) {
    color: @color-text-lightest-beige;
  }

  .contrastColor();
}

.IDS_COLOR_GenerateBackgroundColors(@colors){
  each(@colors, {
    .if.color.background.@{key} {
      .IDS_COLOR_GetCorrectContrastColor(@value);
      background-color: rgba(@value);
    }
  });
}


.IDS_COLOR_GenerateTextColors(@colors){
  each(@colors, {
    .if.color.text.@{key} {
      .IDS_COLOR_GetCorrectContrastColor(@value);
      background-color: rgba(@value);
    }
  });
}


.IDS_COLOR_GenerateStatusColors(@colors){
  each(@colors, {
    .if.color.status.@{key} {
      .IDS_COLOR_GetCorrectContrastColor(@value);
      background-color: rgba(@value);
    }
  });
}


.IDS_COLOR_GenerateInfographicColors(@colors){
  each(@colors, {
    .if.color.infographic.@{key} {
      .IDS_COLOR_GetCorrectContrastColor(@value);
      background-color: rgba(@value);
    }
  });
}


.IDS_COLOR_GenerateInteractionColors(@colors){
  each(@colors, {
    .if.color.interaction.@{key} {
      .IDS_COLOR_GetCorrectContrastColor(@value);
      background-color: rgba(@value);
    }
  });
}


.IDS_COLOR_GenerateAccentColors(@colors){
  each(@colors, {
    .if.color.accent.@{key} {
      .IDS_COLOR_GetCorrectContrastColor(@value);
      background-color: rgba(@value);
    }
  });
}


.IDS_COLOR_Background_And_Text(@color){
  background-color: @color;
  .IDS_COLOR_GetCorrectContrastColor(@color, 5);
}
